server {
    # include snippets/snakeoil.conf;
    keepalive_timeout 70;
    gzip off;
 
    root /var/www/html;
 
    # Add index.php to the list if you are using PHP
    index index.php index.html index.htm;
 
    server_name changeme;
    
 
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
 
    add_header Strict-Transport-Security "max-age=63072000;";
    add_header X-Frame-Options "DENY";
 
    # Redirect non-https traffic to https
        # if ($scheme != "https") {
        # return 301 https://$host$request_uri;
        # }
 
    location / {
        location ~* \.m3u8$ {
        add_header Cache-Control no-cache;
        }
        add_header Access-Control-Allow-Origin *;
 
    # First attempt to serve file, then as directory, then a 404.
        try_files $uri $uri/ =404;
    }
 
    # pass PHP scripts to FastCGI server
 
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
    #   # With php-fpm (or other unix sockets):
        fastcgi_pass unix:/var/run/php/php-fpm.sock;
    #   # With php-cgi (or other tcp sockets):
    #   fastcgi_pass 127.0.0.1:9000;
    }
 
    # deny access to .htaccess files, if Apache's document root concurs with nginx's one
   
    #location ~ /\.ht {
    #   deny all;
    #}
 
# This provides RTMP statistics in XML at http://your-server-address/stat
location /stat {
    rtmp_stat all;
    rtmp_stat_stylesheet stat.xsl;
    # auth_basic "Restricted Content";
        # auth_basic_user_file /etc/nginx/.htpasswd;
    }
 
# XML stylesheet to view RTMP stats. Copy stat.xsl wherever you want and put the full directory path here
location /stat.xsl {
    root /var/www/html/;
    }
 
# Control interface (extremely useful, but can also boot people from streams so we put basic auth in front of it - see https://github.com/arut/nginx-rtmp-module/wiki/Control-module for more info
 
#location /control {
    # you'll need a htpasswd auth file, that's outside the scope of this doc but any apache one will work
    # auth_basic "Restricted Content";
    # auth_basic_user_file /etc/nginx/.htpasswd;
    #rtmp_control all;
    #}
 
#creates the http-location for our full-res desktop HLS stream "http://my-ip/live/my-stream-key/index.m3u8"
location /live {
    # root /var/livestream/hls;
    alias /var/livestream/hls;
    expires -1;
    autoindex on;
    autoindex_localtime on;
    # CORS setup #
        set $sent_http_accept_ranges bytes;
        add_header 'Cache-Control' 'no-cache';
        add_header Cache-Control no-cache;
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length';
    # allow CORS preflight requests #
        if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
        }
    types {
        application/vnd.apple.mpegurl m3u8;
        application/dash+xml mpd;
        video/mp2t ts;
        }
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/matforsonline.se/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/matforsonline.se/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}
server {
    if ($host = www.matforsonline.se) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = matforsonline.se) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;
 
    server_name matforsonline.se www.matforsonline.se;
    return 404; # managed by Certbot




}